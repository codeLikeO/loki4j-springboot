<?xml version="1.0" encoding="UTF-8"?>
<configuration>

  <!-- 彩色日志依赖的渲染类 -->
  <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
  <conversionRule conversionWord="wex"
                  converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
  <conversionRule conversionWord="wEx"
                  converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

  <!-- 日志存放路径 -->
  <property name="log.path" value="/var/log/loki4j-springboot"/>
  <!-- 日志输出格式 -->
  <property name="log.pattern"
            value="%d{yyyy-MM-dd HH:mm:ss.SSS} -%5p ${PID:- } --- [%t] %X{Request-ID} %-40.40logger{39} Line - [%L] : %m%n"/>




  <!-- 控制台输出 -->
  <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(-%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%X{Request-ID}){yellow} %clr(%-40.40logger{39}){cyan} Line - %clr([%L]){magenta} %clr(:){faint} %m%n
      </pattern>
    </encoder>
  </appender>
  <appender name="LOKI" class="com.github.loki4j.logback.Loki4jAppender">
    <batchMaxItems>100</batchMaxItems>
    <batchTimeoutMs>10000</batchTimeoutMs>
    <http class="com.github.loki4j.logback.ApacheHttpSender">
      <url>http://localhost:3100/loki/api/v1/push</url>
    </http>
    <format>

      <message class="com.github.loki4j.logback.JsonLayout">


      </message>

      <sortByTime>true</sortByTime>
    </format>
  </appender>

  <!-- 使用异步方式将日志推送至Loki -->
  <appender name="ASYNC_LOKI" class="ch.qos.logback.classic.AsyncAppender">
    <!-- 队列大小设置，根据实际需要调整 -->
    <queueSize>512</queueSize>
    <!-- 丢弃策略，当队列满时采取的操作 -->
    <discardingThreshold>0</discardingThreshold>
    <neverBlock>true</neverBlock>
    <!-- 实际的Loki Appender -->
    <appender-ref ref="LOKI" />
  </appender>





  <!-- 系统日志输出 -->
  <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.path}/info/info.log</file>
    <!-- 循环政策：基于时间创建日志文件 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!-- 日志文件名格式 -->
      <fileNamePattern>${log.path}/info/info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <!-- 日志最大的历史 -->
      <maxHistory>30</maxHistory>
      <maxFileSize>100MB</maxFileSize>
    </rollingPolicy>
    <encoder>
      <pattern>${log.pattern}</pattern>
      <charset>UTF-8</charset>
    </encoder>

  </appender>

  <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.path}/error/error.log</file>
    <!-- 循环政策：基于时间创建日志文件 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!-- 日志文件名格式 -->
      <fileNamePattern>${log.path}/error/error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <!-- 日志最大的历史 -->
      <maxHistory>30</maxHistory>
      <maxFileSize>50MB</maxFileSize>
    </rollingPolicy>
    <encoder>
      <pattern>${log.pattern}</pattern>
      <charset>UTF-8</charset>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <!-- 过滤的级别 -->
      <level>ERROR</level>
      <!-- 匹配时的操作：接收（记录） -->
      <onMatch>ACCEPT</onMatch>
      <!-- 不匹配时的操作：拒绝（不记录） -->
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>


  <!-- 异步输出 -->
  <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
    <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
    <discardingThreshold>0</discardingThreshold>
    <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
    <queueSize>256</queueSize>
    <!-- 添加附加的appender,最多只能添加一个 -->
    <appender-ref ref="file_info"/>
  </appender>

  <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
    <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
    <discardingThreshold>0</discardingThreshold>
    <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
    <queueSize>256</queueSize>
    <!-- 添加附加的appender,最多只能添加一个 -->
    <appender-ref ref="file_error"/>
  </appender>


  <!--系统操作日志-->
  <root level="info">
    <appender-ref ref="console"/>
    <appender-ref ref="ASYNC-INFO"/>
    <appender-ref ref="ASYNC-ERROR"/>
    <appender-ref ref="ASYNC_LOKI" />
  </root>


</configuration>
